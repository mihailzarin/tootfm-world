generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String    @id @default(cuid())
  worldId         String    @unique
  credentialType  String?
  verified        Boolean   @default(true)
  displayName     String?
  avatar          String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  
  createdParties  Party[]   @relation("PartyCreator")
  joinedParties   PartyMember[]
  votes           Vote[]
}

model Party {
  id              String    @id @default(cuid())
  code            String    @unique
  name            String
  description     String?
  isActive        Boolean   @default(true)
  creatorId       String
  creator         User      @relation("PartyCreator", fields: [creatorId], references: [id])
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  
  members         PartyMember[]
  tracks          Track[]
  
  @@index([code])
  @@index([creatorId])
}

model PartyMember {
  id          String    @id @default(cuid())
  userId      String
  user        User      @relation(fields: [userId], references: [id])
  partyId     String
  party       Party     @relation(fields: [partyId], references: [id])
  role        String    @default("member")
  joinedAt    DateTime  @default(now())
  
  @@unique([userId, partyId])
  @@index([partyId])
  @@index([userId])
}

model Track {
  id              String    @id @default(cuid())
  spotifyId       String
  name            String
  artist          String
  album           String?
  albumArt        String?
  duration        Int
  partyId         String
  party           Party     @relation(fields: [partyId], references: [id])
  addedAt         DateTime  @default(now())
  votes           Vote[]
  voteCount       Int       @default(0)
  
  @@unique([spotifyId, partyId])
  @@index([partyId])
}

model Vote {
  id          String    @id @default(cuid())
  userId      String
  user        User      @relation(fields: [userId], references: [id])
  trackId     String
  track       Track     @relation(fields: [trackId], references: [id])
  value       Int
  createdAt   DateTime  @default(now())
  
  @@unique([userId, trackId])
  @@index([trackId])
  @@index([userId])
}