// app/api/auth/google/callback/route.ts
import { NextRequest, NextResponse } from 'next/server';
import { google } from 'googleapis';

const oauth2Client = new google.auth.OAuth2(
  process.env.GOOGLE_CLIENT_ID,
  process.env.GOOGLE_CLIENT_SECRET,
  process.env.NODE_ENV === 'production'
    ? 'https://tootfm.world/api/auth/google/callback'
    : 'http://localhost:3001/api/auth/google/callback'
);

export async function GET(request: NextRequest) {
  console.log('üìç Google callback started');
  
  try {
    const searchParams = request.nextUrl.searchParams;
    const code = searchParams.get('code');
    const error = searchParams.get('error');
    
    if (error) {
      const redirectUrl = process.env.NODE_ENV === 'production'
        ? 'https://tootfm.world/login?error=cancelled'
        : 'http://localhost:3001/login?error=cancelled';
      return NextResponse.redirect(redirectUrl);
    }
    
    if (!code) {
      const redirectUrl = process.env.NODE_ENV === 'production'
        ? 'https://tootfm.world/login?error=no_code'
        : 'http://localhost:3001/login?error=no_code';
      return NextResponse.redirect(redirectUrl);
    }

    // –û–±–º–µ–Ω–∏–≤–∞–µ–º code –Ω–∞ —Ç–æ–∫–µ–Ω—ã
    const { tokens } = await oauth2Client.getToken(code);
    oauth2Client.setCredentials(tokens);

    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const oauth2 = google.oauth2({ version: 'v2', auth: oauth2Client });
    const { data } = await oauth2.userinfo.get();
    console.log('‚úÖ User:', data.email);

    // –ë–ï–ó –ë–ê–ó–´ –î–ê–ù–ù–´–• - –ø—Ä–æ—Å—Ç–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ cookies
    const userId = `google_${data.id}`;
    
    // –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π redirect URL –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
    const profileUrl = process.env.NODE_ENV === 'production'
      ? 'https://tootfm.world/profile'
      : 'http://localhost:3001/profile';
      
    const response = NextResponse.redirect(profileUrl);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å—ë –≤ cookies —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
    response.cookies.set('tootfm_user_id', userId, {
      httpOnly: false,
      secure: process.env.NODE_ENV === 'production', // HTTPS –Ω–∞ –ø—Ä–æ–¥–µ
      sameSite: 'lax',
      maxAge: 60 * 60 * 24 * 30,
      domain: process.env.NODE_ENV === 'production' ? '.tootfm.world' : undefined
    });

    response.cookies.set('google_user', JSON.stringify({
      id: data.id,
      email: data.email,
      name: data.name,
      picture: data.picture
    }), {
      httpOnly: false,
      secure: process.env.NODE_ENV === 'production',
      sameSite: 'lax',
      maxAge: 60 * 60 * 24 * 30,
      domain: process.env.NODE_ENV === 'production' ? '.tootfm.world' : undefined
    });

    console.log('‚úÖ Success! Redirecting to profile');
    return response;

  } catch (error: any) {
    console.error('‚ùå ERROR:', error.message);
    const errorUrl = process.env.NODE_ENV === 'production'
      ? 'https://tootfm.world/login?error=auth_failed'
      : 'http://localhost:3001/login?error=auth_failed';
    return NextResponse.redirect(errorUrl);
  }
}