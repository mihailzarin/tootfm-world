// app/api/lastfm/auth/route.ts
// –ò–Ω–∏—Ü–∏–∏—Ä—É–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Last.fm

import { NextRequest, NextResponse } from 'next/server';

const LASTFM_API_KEY = process.env.LASTFM_API_KEY!;
const LASTFM_CALLBACK_URL = process.env.LASTFM_CALLBACK_URL || 'http://localhost:3001/api/lastfm/callback';

/**
 * GET –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –Ω–∞—á–∞–ª–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Last.fm
 * –†–µ–¥–∏—Ä–µ–∫—Ç–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Last.fm
 */
export async function GET(request: NextRequest) {
  console.log('üöÄ Starting Last.fm authorization');
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ API –∫–ª—é—á–∞
    if (!LASTFM_API_KEY) {
      console.error('‚ùå LASTFM_API_KEY not configured');
      return NextResponse.json(
        { error: 'Last.fm not configured' },
        { status: 500 }
      );
    }
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º URL –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Last.fm
    const authUrl = new URL('https://www.last.fm/api/auth/');
    authUrl.searchParams.append('api_key', LASTFM_API_KEY);
    authUrl.searchParams.append('cb', LASTFM_CALLBACK_URL);
    
    console.log('üîó Redirecting to Last.fm:', authUrl.toString());
    
    // –†–µ–¥–∏—Ä–µ–∫—Ç–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ Last.fm
    return NextResponse.redirect(authUrl.toString());
    
  } catch (error) {
    console.error('‚ùå Last.fm auth error:', error);
    return NextResponse.json(
      { error: 'Failed to start authorization' },
      { status: 500 }
    );
  }
}

/**
 * DELETE –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è Last.fm
 * –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± –æ—Ç–∫–ª—é—á–∏—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é
 */
export async function DELETE(request: NextRequest) {
  try {
    // TODO: –£–¥–∞–ª–∏—Ç—å –¥–∞–Ω–Ω—ã–µ Last.fm –∏–∑ –±–∞–∑—ã
    // –ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ —É–¥–∞–ª—è–µ–º cookies
    
    const response = NextResponse.json({ 
      success: true,
      message: 'Last.fm disconnected' 
    });
    
    response.cookies.delete('lastfm_session');
    response.cookies.delete('lastfm_username');
    
    console.log('‚úÖ Last.fm disconnected');
    
    return response;
  } catch (error) {
    console.error('‚ùå Error disconnecting Last.fm:', error);
    return NextResponse.json(
      { success: false, error: 'Failed to disconnect' },
      { status: 500 }
    );
  }
}